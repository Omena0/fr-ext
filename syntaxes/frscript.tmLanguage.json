{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Frscript",
  "scopeName": "source.fr",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#fstrings"
    },
    {
      "include": "#bytes"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#function-declaration"
    },
    {
      "include": "#types"
    },
    {
      "include": "#python-interop"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#function-call"
    },
    {
      "include": "#struct-declaration"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.fr",
          "begin": "//",
          "end": "$",
          "patterns": [
            {
              "name": "punctuation.definition.comment.fr",
              "match": "//"
            }
          ]
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.directive.fr",
          "match": "^\\s*#(label|bytecode|global)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.fr",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|')"
            }
          ]
        },
        {
          "name": "string.quoted.single.fr",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|')"
            }
          ]
        }
      ]
    },
    "fstrings": {
      "patterns": [
        {
          "name": "string.interpolated.fr",
          "begin": "f\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fr"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fr"
            }
          },
          "patterns": [
            {
              "name": "meta.embedded.expression.fr",
              "begin": "\\{",
              "end": "\\}",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.embedded.begin.fr"
                }
              },
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.embedded.end.fr"
                }
              },
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            },
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|'|\\{|\\})"
            }
          ]
        },
        {
          "name": "string.interpolated.fr",
          "begin": "f'",
          "end": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fr"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fr"
            }
          },
          "patterns": [
            {
              "name": "meta.embedded.expression.fr",
              "begin": "\\{",
              "end": "\\}",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.embedded.begin.fr"
                }
              },
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.embedded.end.fr"
                }
              },
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            },
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|'|\\{|\\})"
            }
          ]
        }
      ]
    },
    "bytes": {
      "patterns": [
        {
          "name": "string.quoted.double.bytes.fr",
          "begin": "b\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fr"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fr"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|')"
            }
          ]
        },
        {
          "name": "string.quoted.single.bytes.fr",
          "begin": "b'",
          "end": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fr"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fr"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.fr",
              "match": "\\\\(n|t|r|\\\\|\"|')"
            }
          ]
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#function-call"
        },
        {
          "name": "variable.other.fr",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.fr",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        },
        {
          "name": "constant.numeric.integer.fr",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.fr",
          "match": "\\b(if|elif|else|while|for|in|switch|case|default|break|continue|return|assert|try|except|raise|goto)\\b"
        },
        {
          "name": "keyword.other.fr",
          "match": "\\b(const|global)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.fr",
          "match": "\\b(void|int|float|str|string|bool|list|dict|set|bytes|any|pyobject|pyobj)\\b"
        }
      ]
    },
    "python-interop": {
      "patterns": [
        {
          "name": "keyword.other.python.fr",
          "match": "\\b(py_import|py_call|from)\\b"
        },
        {
          "name": "keyword.control.import.fr",
          "match": "\\b(as)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.boolean.fr",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.fr",
          "match": "\\b(null|none|None)\\b"
        }
      ]
    },
    "function-declaration": {
      "patterns": [
        {
          "match": "\\b(void|int|float|str|string|bool|list|dict|set|bytes|any|pyobject|pyobj)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(([^)]*)\\)",
          "captures": {
            "1": {
              "name": "storage.type.function.fr"
            },
            "2": {
              "name": "entity.name.function.fr"
            },
            "3": {
              "patterns": [
                {
                  "match": "(void|int|float|str|string|bool|list|dict|set|bytes|any|pyobject|pyobj)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
                  "captures": {
                    "1": {
                      "name": "storage.type.fr"
                    },
                    "2": {
                      "name": "variable.parameter.fr"
                    }
                  }
                },
                {
                  "match": ",",
                  "name": "punctuation.separator.parameter.fr"
                },
                {
                  "match": "[a-zA-Z_][a-zA-Z0-9_]*",
                  "name": "variable.parameter.fr"
                }
              ]
            }
          }
        }
      ]
    },
    "function-parameters": {
      "patterns": [
        {
          "match": "\\s*(void|int|float|str|string|bool|list|dict|set|bytes|any|pyobject|pyobj)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "storage.type.fr"
            },
            "2": {
              "name": "variable.parameter.fr"
            }
          }
        },
        {
          "match": ",",
          "name": "punctuation.separator.parameter.fr"
        },
        {
          "name": "variable.parameter.fr",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    "function-call": {
      "patterns": [
        {
          "name": "meta.function-call.fr",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.call.fr"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#expression"
            },
            {
              "include": "#strings"
            },
            {
              "include": "#fstrings"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#constants"
            }
          ]
        }
      ]
    },
    "struct-declaration": {
      "patterns": [
        {
          "name": "meta.struct.fr",
          "begin": "\\b(struct)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\{",
          "beginCaptures": {
            "1": {
              "name": "storage.type.struct.fr"
            },
            "2": {
              "name": "entity.name.type.struct.fr"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#types"
            },
            {
              "include": "#comments"
            }
          ]
        },
        {
          "name": "storage.type.struct.fr",
          "match": "\\b(struct)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.range.fr",
          "match": "\\.\\."
        },
        {
          "name": "keyword.operator.membership.fr",
          "match": "\\b(in|not\\s+in)\\b"
        },
        {
          "name": "keyword.operator.logical.fr",
          "match": "(&&|\\|\\||!|\\band\\b|\\bor\\b|\\bnot\\b)"
        },
        {
          "name": "keyword.operator.comparison.fr",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.assignment.fr",
          "match": "(=|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>=)"
        },
        {
          "name": "keyword.operator.arithmetic.fr",
          "match": "(\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.bitwise.fr",
          "match": "(&|\\||\\^|<<|>>|~)"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.comma.fr",
          "match": ","
        },
        {
          "name": "punctuation.terminator.statement.fr",
          "match": ";"
        },
        {
          "name": "punctuation.accessor.fr",
          "match": "\\."
        },
        {
          "name": "punctuation.section.brackets.fr",
          "match": "[\\[\\]\\{\\}\\(\\)]"
        }
      ]
    }
  }
}
